import { config } from "@dotenvx/dotenvx";
import * as toml from "@iarna/toml";
import * as fs from "fs";
import * as path from "path";
import { EnvSchema } from "../src/utils/env.js";

const SECRET_MARKER = "# SECRET";
const DEFINE_MARKER = "# DEFINE";
const ENV_PATH = path.resolve(import.meta.dirname, "../.env");
const DEV_VARS_PATH = path.resolve(import.meta.dirname, "../.dev.vars");
const WRANGLER_TOML_PATH = path.resolve(
  import.meta.dirname,
  "../wrangler.toml",
);

/**
 * Check that the .env file is valid.
 */
const checkEnvFile = () => {
  const { parsed: env } = config();
  if (!env) {
    throw new Error("Failed to parse .env file");
  }
  EnvSchema.parse(env);
};

/**
 * Process the .env file and generate the .dev.vars and wrangler.toml files.
 */
const processEnvFile = () => {
  // Read the .env file
  const envContent = fs.readFileSync(ENV_PATH, "utf8");
  const envLines = envContent.split("\n");

  // Process lines for secrets and regular vars
  const secretLines: string[] = [];
  const vars: Record<string, string> = {};
  const defines: Record<string, string> = {};

  // Populate secretLines, vars, and defines
  envLines.forEach((line) => {
    if (!line.trim() || line.startsWith("#")) {
      return;
    }

    const [key, ...valueParts] = line.split("=");
    const value = valueParts.join("=").trim();
    const cleanKey = key!.trim();

    if (line.includes(SECRET_MARKER)) {
      secretLines.push(`${cleanKey}=${value}`);
    } else if (line.includes(DEFINE_MARKER)) {
      defines[cleanKey] = `"${value.split(" ")[0]}"`;
    } else {
      vars[cleanKey] = value;
    }
  });

  // Write secrets to .dev.vars
  fs.writeFileSync(DEV_VARS_PATH, secretLines.join("\n"), "utf8");
  console.log("Secrets extracted to .dev.vars");

  // Update wrangler.toml
  const wranglerConfig = {
    name: "runner-be",
    main: "src/index.ts",
    compatibility_date: "2024-11-15",
    compatibility_flags: ["nodejs_compat"],
    observability: {
      enabled: true,
    },
    upload_source_maps: true,
    vars,
    define: defines,
  };

  const AUTO_GENERATED_COMMENT =
    "# This file is auto-generated by env.script.ts. Do not edit directly.";

  fs.writeFileSync(
    WRANGLER_TOML_PATH,
    AUTO_GENERATED_COMMENT + "\n" + toml.stringify(wranglerConfig),
  );
  console.log("Updated wrangler.toml");
};

checkEnvFile();
processEnvFile();
